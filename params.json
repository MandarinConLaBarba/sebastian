{"name":"Sebastian","tagline":"Flow-control for Node.js and the browser.","body":"### What is Sebastian?\r\nSebastian is a small flow-control library that emphasizes writing small, test-friendly units of code. \r\n\r\n## Dependencies\r\n\r\n* For Node.js, [jquery-deferred](https://github.com/zzdhidden/node-jquery-deferred), but Q support may be added at a later date.\r\n* For browser environments, jQuery.\r\n\r\n## Getting started\r\n\r\n### To use as a Node.js module, install with NPM, or add as a dependency in your package.json.\r\n\r\n```\r\nnpm install sebastian\r\n```\r\n\r\nThen, require the module and add a flow:\r\n\r\n```\r\nvar flow = require(\"sebastian\").flow;\r\n\r\nflow(\"helloFlow\")\r\n    .step(\"one\", function() {\r\n        console.log(\"hello..\");\r\n    }).step(\"two\", function() {\r\n        console.log(\"hello 2..\");\r\n    }).begin();\r\n```\r\n\r\nThis creates a flow called \"helloFlow\", adds to steps two the flow, and starts the flow.\r\n\r\n### To use as a client/UI package, install with Bower, or add as a dependency in bower.json (or component.json):\r\n\r\n```\r\nbower install sebastian\r\n```\r\n\r\n### To use with an AMD module loader (only tested w/ RequireJS):\r\n\r\n```\r\n    require([\"jquery\", \"path/to/sebastian\"], function($, sebastian) {\r\n\r\n        //call the local definition\r\n        sebastian.flow(\"blah\")\r\n                .step(\"one\", function() {\r\n                    console.log(\"step one..\");\r\n                })\r\n                .step(\"two\", function() {\r\n                    console.log(\"step two..\");\r\n                })\r\n                .begin();\r\n\r\n    });\r\n```\r\n\r\n### To use with old-school sequential script tags:\r\n\r\n```\r\n<script type=\"text/javascript\" src=\"vendor/jquery/jquery.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"/sebastian.js\"></script>\r\n\r\n<script type=\"text/javascript\">\r\n\r\n    $.Flow(\"firstFlow\")\r\n            .step(\"one\", function() {\r\n                console.log(\"executing step one in firstFlow...\");\r\n            })\r\n            .step(\"two\", function() {\r\n                console.log(\"executing step two in firstFlow...\");\r\n            }).begin();\r\n\r\n\r\n</script>\r\n\r\n```\r\n\r\n[Check out the examples](examples/node).\r\n\r\nMore soon..","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}